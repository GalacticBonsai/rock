######################################################
################# Setup Metricbeat ###################
######################################################
---
- name: "Offline build check"
  set_fact:
    kube_state_metrics_image: "{{ kube_state_metrics_offline_image }}"
    kube_state_metrics_image64: "{{ kube_state_metrics_offline_image64 }}"
    metricbeat_image: "{{ metricbeat_offline_image }}"
  when: offline_build

- name: 'Install python-docker-py'
  yum:
    name: 'python-docker-py.noarch'
    state: 'installed'

- name: Download Kube State Metric Containers
  docker_image:
    name: "{{ item }}"
  with_items:
    - "{{ kube_state_metrics_image }}:{{ kube_state_metrics_version }}"
    - "{{ kube_state_metrics_image64 }}:{{ kube_state_metrics_version }}"
    - "{{ metricbeat_image }}:{{ metricbeat_version }}"

- name: "Create config directory"
  file:
    path: "{{ metricbeat_dir }}"
    state: directory
    owner: root
    group: root
    mode: u+rw,g+rw

- name: Copy Kube State Metric folder
  copy:
    src: kube-state-metric
    dest: "{{ metricbeat_dir }}/"
    owner: root
    group: root
    mode: 0644

- name: Install templates
  template:
    src: "templates/metricbeat-deploy.yml.j2"
    dest: "{{ metricbeat_dir }}/metricbeat-deploy.yml"
    group: root
    owner: root
    mode: 0644

- name: Flush Metricbeat Config
  command: "kubectl delete -f {{ metricbeat_dir }}/metricbeat-deploy.yml --ignore-not-found=true"

# TODO SHOULD ALSO FLUSH KUBE STATE METRIC

- name: Deploy Kube State Metric
  shell: kubectl apply -f {{ metricbeat_dir }}/kube-state-metric

- name: Wait for Kube State Metrics to be ready
  import_role:
    name: kubernetes/common
    tasks_from: kube_wait
  vars:
    type: "deployments"
    namespace: "kube-system"
    resource_name: "kube-state-metrics"
    label: ""

- name: Deploy Services
  import_role:
    name: kubernetes/common
    tasks_from: kube_create.yml
  vars:
    name: "Metricbeat"
    file_name: "{{ metricbeat_dir }}/metricbeat-deploy.yml"

- name: Wait for Metricbeat to be ready
  import_role:
    name: kubernetes/common
    tasks_from: kube_wait
  vars:
    type: "deployments"
    namespace: "kube-system"
    resource_name: "metricbeat"
    label: ""

...
